"use strict";(self.webpackChunkswift_tutorials_cn=self.webpackChunkswift_tutorials_cn||[]).push([[4295],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),_=i,m=u["".concat(o,".").concat(_)]||u[_]||d[_]||r;return n?a.createElement(m,c(c({ref:t},s),{},{components:n})):a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,c=new Array(r);c[0]=_;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:i,c[1]=l;for(var p=2;p<r;p++)c[p]=n[p];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},69036:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>k,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={},c="\u5149\u7ebf\u8ffd\u8e2a\u51fd\u6570",l={unversionedId:"metal-shading-language-specification/ray-tracing-functions/index",id:"metal-shading-language-specification/ray-tracing-functions/index",title:"\u5149\u7ebf\u8ffd\u8e2a\u51fd\u6570",description:"\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\uff1a\u4ece Metal 2.3 \u5f00\u59cb\u652f\u6301\u5149\u7ebf\u8ffd\u8e2a\u529f\u80fd\u3002",source:"@site/docs/metal-shading-language-specification/ray-tracing-functions/index.mdx",sourceDirName:"metal-shading-language-specification/ray-tracing-functions",slug:"/metal-shading-language-specification/ray-tracing-functions/",permalink:"/swift-tutorials-cn/docs/metal-shading-language-specification/ray-tracing-functions/",draft:!1,editUrl:"https://github.com/zhuanghongji/swift-tutorials-cn/docs/metal-shading-language-specification/ray-tracing-functions/index.mdx",tags:[],version:"current",lastUpdatedAt:1697949909,formattedLastUpdatedAt:"2023\u5e7410\u670822\u65e5",frontMatter:{},sidebar:"metalshadinglanguagespecificationSidebar",previous:{title:"\u53ef\u53d8\u5149\u6805\u5316\u7387",permalink:"/swift-tutorials-cn/docs/metal-shading-language-specification/variable-rasterization-rate/"},next:{title:"INF\u3001NaN \u548c\u975e\u89c4\u8303\u5316\u6570",permalink:"/swift-tutorials-cn/docs/metal-shading-language-specification/inf-nan-and-denormalized-numbers/"}},o={},p=[{value:"\u52a0\u901f\u7ed3\u6784\u51fd\u6570",id:"\u52a0\u901f\u7ed3\u6784\u51fd\u6570",level:2},{value:"\u76f8\u4ea4\u76f8\u4ea4\u51fd\u6570",id:"\u76f8\u4ea4\u76f8\u4ea4\u51fd\u6570",level:2},{value:"\u63a7\u5236\u904d\u5386\u884c\u4e3a\u7684 Intersector \u51fd\u6570",id:"\u63a7\u5236\u904d\u5386\u884c\u4e3a\u7684-intersector-\u51fd\u6570",level:2},{value:"\u76f8\u4ea4\u67e5\u8be2\u51fd\u6570",id:"\u76f8\u4ea4\u67e5\u8be2\u51fd\u6570",level:2},{value:"\u95f4\u63a5\u5b9e\u4f8b\u63cf\u8ff0\u7b26",id:"\u95f4\u63a5\u5b9e\u4f8b\u63cf\u8ff0\u7b26",level:2},{value:"\u66f2\u7ebf\u5b9e\u7528\u51fd\u6570",id:"\u66f2\u7ebf\u5b9e\u7528\u51fd\u6570",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},u=s("ToBePolishedAfterTranslation"),d=s("OriginalPDF"),_=s("TableView"),m={toc:p},g="wrapper";function k(e){let{components:t,...n}=e;return(0,i.kt)(g,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5149\u7ebf\u8ffd\u8e2a\u51fd\u6570"},"\u5149\u7ebf\u8ffd\u8e2a\u51fd\u6570"),(0,i.kt)(u,{mdxType:"ToBePolishedAfterTranslation"}),(0,i.kt)(d,{title:"6.18 Ray Tracing Functions",mdxType:"OriginalPDF"}),(0,i.kt)("p",null,"\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\uff1a\u4ece Metal 2.3 \u5f00\u59cb\u652f\u6301\u5149\u7ebf\u8ffd\u8e2a\u529f\u80fd\u3002"),(0,i.kt)("p",null,"\u5149\u7ebf\u8ffd\u8e2a\u51fd\u6570\u548c\u7c7b\u578b\u5728\u547d\u540d\u7a7a\u95f4 ",(0,i.kt)("inlineCode",{parentName:"p"},"metal::raytracing")," \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"<metal_raytracing>")," \u4e2d\u5b9a\u4e49\u3002\u5728 Metal 2.3 \u4e2d\uff0c\u5b83\u4eec\u4ec5\u5728\u8ba1\u7b97\u51fd\u6570\uff08\u5185\u6838\u51fd\u6570\uff09\u4e2d\u53d7\u652f\u6301\uff0c\u9664\u975e\u4e0b\u9762\u53e6\u6709\u8bf4\u660e\u3002\u4ece Metal 2.4 \u5f00\u59cb\uff0c\u9876\u70b9\u3001\u7247\u6bb5\u548c\u56fe\u5757\u51fd\u6570\u4e5f\u652f\u6301\u5b83\u4eec\u3002"),(0,i.kt)("h2",{id:"\u52a0\u901f\u7ed3\u6784\u51fd\u6570"},"\u52a0\u901f\u7ed3\u6784\u51fd\u6570"),(0,i.kt)("p",null,"\u5728 Metal 2.3 \u4e2d\uff0c\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u4e4b\u4e00\u6765\u68c0\u67e5\u52a0\u901f\u7ed3\u6784\uff08\u53c2\u89c1\u7b2c 2.17.6 \u8282\uff09\u662f\u5426\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"bool is_null_primitive_acceleration_structure(primitive_acceleration_stru cture)\n\nbool is_null_instance_acceleration_structure(instance_acceleration_struct ure)\n")),(0,i.kt)("p",null,"\u5728 Metal 2.4 \u4e2d\uff0c\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u68c0\u67e5\u52a0\u901f\u7ed3\u6784\u662f\u5426\u4e3a\u7a7a\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"bool is_null_acceleration_structure(acceleration_structure<intersection_t ags...>)\n")),(0,i.kt)("p",null,"\u5728 Metal 3.1 \u4e2d\u3002Metal \u652f\u6301\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8fed\u4ee3\u5b9e\u4f8b\u52a0\u901f\u7ed3\u6784\u5f15\u7528\u7684\u52a0\u901f\u7ed3\u6784\uff1a"),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5b9e\u4f8b\u52a0\u901f\u7ed3\u6784\u4e2d\u5b9e\u4f8b\u7684\u6570\u91cf\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_instance_count() const\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u68c0\u7d22\u5b9e\u4f8b\u52a0\u901f\u7ed3\u6784\u4e2d\u5305\u542b\u7684\u5b9e\u4f8b\u6240\u5f15\u7528\u7684\u52a0\u901f\u7ed3\u6784\u3002\u8fd4\u56de\u7c7b\u578b\u662f\u7b2c 2.17.6 \u8282\u4e2d\u5b9a\u4e49\u7684\u6a21\u677f\u5316\u7c7b\u578b\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename... intersection_tags> acceleration_structure< intersection_tags...>\n")),(0,i.kt)("p",null,"\u5982\u679c\u58f0\u660e\u7684\u8fd4\u56de\u7c7b\u578b\u4e0e\u5b9e\u4f8b\u52a0\u901f\u7ed3\u6784\u4e2d\u5305\u542b\u7684\u5b9e\u4f8b\u5f15\u7528\u7684\u52a0\u901f\u7ed3\u6784\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5219\u7ed3\u679c\u672a\u5b9a\u4e49\u3002\u4e0d\u4f7f\u7528\u5b9e\u4f8b\u548c/\u6216\u57fa\u5143\u8fd0\u52a8\u6807\u7b7e\u7684\u5b9e\u4f8b\u52a0\u901f\u7ed3\u6784\u53ef\u4ee5\u4f5c\u4e3a\u5305\u542b\u8fd9\u4e9b\u6807\u7b7e\u7684\u52a0\u901f\u7ed3\u6784\u7c7b\u578b\u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u6ca1\u6709\u4efb\u4f55\u8fd0\u52a8\uff08\u5b9e\u4f8b\u6216\u57fa\u5143\uff09\u7684\u5b9e\u4f8b\u52a0\u901f\u7ed3\u6784\u53ef\u4ee5\u8fd4\u56de\u4e3a\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"acceleration_structure<instancing>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"acceleration_structure<instancing, instance_motion>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"acceleration_structure<instancing, primitive_motion>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"acceleration_structure<instancing, primitive_motion, instance_motion>"))),(0,i.kt)("p",null,"\u6b64\u529f\u80fd\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5728\u4f7f\u7528\u591a\u4e2a\u52a0\u901f\u7ed3\u6784\u7c7b\u578b\u65f6\u907f\u514d\u4e3a\u6bcf\u7ec4\u6807\u7b7e\u63d0\u4f9b\u4e13\u7528\u4ea4\u53c9\u5668\uff0c\u4f46\u7531\u4e8e\u904d\u5386\u4e0d\u9700\u8981\u8fd9\u4e9b\u6807\u7b7e\u7684\u52a0\u901f\u7ed3\u6784\u800c\u5bfc\u81f4\u6f5c\u5728\u7684\u6027\u80fd\u6210\u672c\u3002"),(0,i.kt)("h2",{id:"\u76f8\u4ea4\u76f8\u4ea4\u51fd\u6570"},"\u76f8\u4ea4\u76f8\u4ea4\u51fd\u6570"),(0,i.kt)("p",null,"\u521b\u5efa ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector<intersection_tags...> ")," \u5bf9\u8c61\u540e\uff08\u8bf7\u53c2\u9605\u7b2c 2.17.5 \u8282\uff09\uff0c\u4f60\u53ef\u4ee5\u6839\u636e ",(0,i.kt)("inlineCode",{parentName:"p"},"intersection_tags")," \u7684\u503c\u8c03\u7528\u4ee5\u4e0b intersect \u51fd\u6570\u4e4b\u4e00\u3002"),(0,i.kt)(_,{num:"6.26",title:"Intersect function",headers:["Function"],datasList:[["result_type intersect(...parameters...). "]],mdxType:"TableView"}),(0,i.kt)("p",null,"\u8868 6.27 \u663e\u793a\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersect")," \u51fd\u6570\u7684\u53ef\u80fd\u53c2\u6570\u3002\u6240\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersect")," \u51fd\u6570\u90fd\u5fc5\u987b\u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"ray")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"accel_struct")," \u53c2\u6570\u3002\u5176\u5b83\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002"),(0,i.kt)(_,{num:"6.27",title:"Intersect functions input parameters",headers:["Parameter","Description"],datasList:[["ray","Ray properties"],["accel_struct","Acceleration structure of type acceleration_structure< intersection_tags...>."],["mask","Intersection mask to be AND'd with instance mask defined in the Metal API MTLAccelerationStructureInstanceDescriptor. Instances with non-overlapping masks will be skipped."],["time \nAll OS: Since Metal 2.4.","The time associated with the ray. The parameter exists if the intersection_tags have primitive_motion or instance_motion."],["func_table","Intersection function table of type intersection_function_table<intersection_tags...>. See section 2.17.3."],["payload","User payload object, which is passed by reference. When the user calls intersect(), the payload parameter is copied to the ray_data address space and passed to the intersection function. \n\nThe result is copied on the exit of the intersection function (section 5.1.6) and the payload object is updated."]],mdxType:"TableView"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"result_type")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"using result_type = intersection_result<intersection_tags...>;")),(0,i.kt)("p",null,"\u4ec5\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersection_tags")," \u6ca1\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"instancing")," \u65f6\uff0c\u4ee5\u4e0b\u4e00\u7ec4\u76f8\u4ea4\u51fd\u6570\u624d\u53ef\u7528\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"result_type intersect(ray ray, primitive_acceleration_structure accel_struct) const;\n\nresult_type intersect(ray ray,\n                      primitive_acceleration_structure accel_struct,\n                      intersection_function_table<intersection_tags...> func_table) const;\n\ntemplate <typename T> result_type intersect(ray ray,\n                                            primitive_acceleration_structure accel_struct,\n                                            intersection_function_table<intersection_tags...> func_table,\n                                            thread T &payload) const;\n")),(0,i.kt)("p",null,"\u4ec5\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersection_tags")," \u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"instancing")," \u65f6\uff0c\u4ee5\u4e0b\u4e00\u7ec4\u76f8\u4ea4\u51fd\u6570\u624d\u53ef\u7528\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"result_type intersect(ray ray,\n                      instance_acceleration_structure accel_struct,\n                      uint mask = ~0U) const;\n\n\nresult_type intersect(ray ray,\n                      instance_acceleration_structure accel_struct,\n                      intersection_function_table<intersection_tags...> func_table) const;\n\ntemplate <typename T> result_type intersect(ray ray,\n                                            instance_acceleration_structure accel_struct,\n                                            intersection_function_table<intersection_tags...> func_table,\n                                            thread T &payload) const;\n\nresult_type intersect(ray ray,\n                      instance_acceleration_structure accel_struct,\n                      uint mask,\n                      intersection_function_table<intersection_tags...> func_table) const;\n\ntemplate <typename T> result_type intersect(ray ray,\n                                            instance_acceleration_structure accel_struct,\n                                            uint mask,\n                                            intersection_function_table<intersection_tags...> func_table,\n                                            thread T &payload) const;\n")),(0,i.kt)("p",null,"\u4ece Metal 2.4 \u5f00\u59cb\uff0c\u5982\u679c ",(0,i.kt)("inlineCode",{parentName:"p"},"intersection_tags")," \u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"primitive_motion")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"instance_motion"),"\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e00\u7ec4\u76f8\u4ea4\u51fd\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T, intersection_tags...> result_type intersect(\n      ray ray,\n      acceleration_structure< intersection_tags...> accel_struct,\n      float time) const;\n\ntemplate <typename T, intersection_tags...> result_type intersect(\n      ray ray,\n      acceleration_structure< intersection_tags...> accel_struct,\n      float time,\n      intersection_function_table<intersection_tags...> func_table) const;\n\ntemplate <typename T, intersection_tags...> result_type intersect(\n      ray ray,\n      acceleration_structure< intersection_tags...> accel_struct,\n      float time,\n      intersection_function_table<intersection_tags...> func_table,\n      thread T &payload) const;\n")),(0,i.kt)("p",null,"\u4ece Metal 2.4 \u5f00\u59cb\uff0c\u4ec5\u5f53 junction_tags \u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"instancing")," \u4ee5\u53ca ",(0,i.kt)("inlineCode",{parentName:"p"},"primitive_motion")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"instance_motion")," \u65f6\uff0c\u4ee5\u4e0b\u4e00\u7ec4\u76f8\u4ea4\u51fd\u6570\u624d\u53ef\u7528\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T, intersection_tags...>  result_type intersect(\n      ray ray,\n      acceleration_structure< intersection_tags...> accel_struct,\n      uint mask = ~0U,\n      float time = 0.0f) const;\n\ntemplate <typename T, intersection_tags...> result_type intersect(\n      ray ray,\n      acceleration_structure< intersection_tags...> accel_struct,\n      uint mask,\n      float time,\n      intersection_function_table<intersection_tags...> func_table) const;\n\ntemplate <typename T, intersection_tags...> result_type intersect(\n      ray ray,\n      acceleration_structure< intersection_tags...> accel_struct,\n      uint mask,\n      float time,\n      intersection_function_table<intersection_tags...> func_table,\n      thread T &payload) const;\n")),(0,i.kt)("h2",{id:"\u63a7\u5236\u904d\u5386\u884c\u4e3a\u7684-intersector-\u51fd\u6570"},"\u63a7\u5236\u904d\u5386\u884c\u4e3a\u7684 Intersector \u51fd\u6570"),(0,i.kt)("p",null,"\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\uff1aMetal 3.1 \u6dfb\u52a0\u4e86\u5bf9\u66f2\u7ebf\u7684\u652f\u6301\u3002"),(0,i.kt)("p",null,"\u8981\u8986\u76d6\u904d\u5386\u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector<intersection_tags...>")," \u5bf9\u8c61\u7684\u4ee5\u4e0b\u6210\u5458\u51fd\u6570\u3002"),(0,i.kt)(_,{num:"6.28",title:"Intersect functions to control traversal",headers:["Functions to control traversal behavior"],datasList:[["void set_triangle_front_facing_winding(winding)"],["void set_geometry_cull_mode(geometry_cull_mode)"],["void set_opacity_cull_mode(opacity_cull_mode)"],["void force_opacity(forced_opacity)"],["void assume_geometry_type(geometry_type)"],["void assume_identity_transforms(bool)"],["void accept_any_intersection(bool)"]],mdxType:"TableView"}),(0,i.kt)("p",null,'\u4e09\u89d2\u5f62\u6709\u4e24\u4e2a\u8fb9\u6216 "\u9762"\u3002\u6b63\u9762\u7ed5\u7ec4\u786e\u5b9a\u4ece\u5c04\u7ebf\u539f\u70b9\u770b\u65f6\u54ea\u4e2a\u4e09\u89d2\u5f62\u9762\u88ab\u89c6\u4e3a"\u6b63\u9762"\u9762\u3002\u5982\u679c\u4ece\u5c04\u7ebf\u539f\u70b9\u770b\uff0c\u9876\u70b9\u6309\u987a\u65f6\u9488\u987a\u5e8f\u51fa\u73b0\uff0c\u5e76\u4e14\u6b63\u9762\u7ed5\u7ebf\u662f\u987a\u65f6\u9488\u65b9\u5411\uff0c\u5219\u53ef\u89c1\u9762\u4e3a\u6b63\u9762\u3002\u53e6\u4e00\u5f20\u8138\u662f\u80cc\u9762\u3002\u5982\u679c\u6b63\u9762\u7ed5\u7ebf\u662f\u9006\u65f6\u9488\u65b9\u5411\uff0c\u5219\u76f8\u53cd\u3002\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u66f4\u6539\u9ed8\u8ba4\u7ed5\u7ebf\uff08',(0,i.kt)("inlineCode",{parentName:"p"},"clockwise"),"\uff09\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum class winding {\n    clockwise,\n    counterclockwise\n};\nvoid set_triangle_front_facing_winding(winding w);\n")),(0,i.kt)("p",null,"\u8981\u66f4\u6539\u9ed8\u8ba4\u7684\u4e09\u89d2\u5f62\u5254\u9664\u6a21\u5f0f\uff08\u65e0\uff09\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum class triangle_cull_mode {\n    none,\n    front,\n    back\n};\nvoid set_triangle_cull_mode(triangle_cull_mode tcm);\n")),(0,i.kt)("p",null,"\u5982\u679c\u5254\u9664\u6a21\u5f0f\u8bbe\u7f6e\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"front"),"\uff0c\u5219\u6b63\u9762\u4ece\u5c04\u7ebf ",(0,i.kt)("inlineCode",{parentName:"p"},"ray")," \u53ef\u89c1\u7684\u4e09\u89d2\u5f62\u4e0d\u8003\u8651\u76f8\u4ea4\u3002\u5426\u5219\uff0c\u5982\u679c\u5254\u9664\u6a21\u5f0f\u8bbe\u7f6e\u4e3a\u80cc\u9762\uff0c\u5219\u80cc\u9762\u4ece\u5c04\u7ebf\u539f\u70b9\u53ef\u89c1\u7684\u4e09\u89d2\u5f62\u4e0d\u8003\u8651\u76f8\u4ea4\u3002"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u51fd\u6570\u53ef\u7528\u4e8e\u8bbe\u7f6e\u4ea4\u96c6\u4ee5\u4ece\u5019\u9009\u51e0\u4f55\u56fe\u5f62\u96c6\u4e2d\u5254\u9664\u6240\u6709\u8fb9\u754c\u6846\u6216\u4e09\u89d2\u5f62\u57fa\u5143\u3002\u9ed8\u8ba4\u7684\u51e0\u4f55\u5254\u9664\u6a21\u5f0f\u662f\u65e0\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum class geometry_cull_mode {\n    none,\n    triangle,\n    bounding_box,\n    curve         // Since Metal 3.1\n};\n\nvoid set_geometry_cull_mode(geometry_cull_mode gcm);\n")),(0,i.kt)("p",null,"\u9ed8\u8ba4\u4e0d\u900f\u660e\u5ea6\u5254\u9664\u6a21\u5f0f\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"none"),"\u3002\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u66f4\u6539\u4e0d\u900f\u660e\u5ea6\u3002\u8bf7\u53c2\u9605\u4e0b\u6587\uff0c\u4e86\u89e3\u4e0d\u900f\u660e\u5ea6\u5c06\u5982\u4f55\u5f71\u54cd\u4e09\u89d2\u5f62\u548c\u8fb9\u754c\u6846\u56fe\u5143\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum class opacity_cull_mode {\n    none,\n    opaque,\n    non_opaque\n};\n\nvoid set_opacity_cull_mode(opacity_cull_mode ocm);\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u8986\u76d6\u6bcf\u4e2a\u5b9e\u4f8b\u548c\u6bcf\u4e2a\u51e0\u4f55\u56fe\u5f62\u7684\u5f3a\u5236\u5bb9\u91cf\u8bbe\u7f6e\u3002\u9ed8\u8ba4\u503c\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"none"),"\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum class forced_opacity {\n    none,\n    opaque,\n    non_opaque\n};\n\nvoid force_opacity(forced_opacity fo);\n")),(0,i.kt)("p",null,"\u4e09\u89d2\u5f62\u57fa\u5143\u4e5f\u53ef\u4ee5\u6839\u636e\u5176\u4e0d\u900f\u660e\u5ea6\u8fdb\u884c\u5254\u9664\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"opaque")," \u4e09\u89d2\u5f62\u5c06\u4e0d\u4f1a\u8fd0\u884c\u4efb\u4f55\u4ea4\u96c6\u51fd\u6570\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"non_opaque")," \u4e09\u89d2\u5f62\u5c06\u8fd0\u884c\u5176\u4ea4\u96c6\u51fd\u6570\u6765\u63a5\u53d7\u6216\u62d2\u7edd\u547d\u4e2d\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PrimitiveAccelerationStructure")," \u901a\u8fc7\u58f0\u660e ",(0,i.kt)("inlineCode",{parentName:"p"},"MTLAccelerationStructureGeometryFlagOpaque")," \u6765\u7f16\u7801\u4e09\u89d2\u5f62\u662f\u4e0d\u900f\u660e\u8fd8\u662f\u975e\u4e0d\u900f\u660e\u3002\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector.force_opacity()")," \u6765\u8986\u76d6\u4e0d\u900f\u660e\u5ea6\u3002\u5982\u679c\u4f7f\u7528\uff0c\u5b83\u5c06\u4f18\u5148\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u4e0d\u900f\u660e\u6027\u6807\u5fd7\uff08",(0,i.kt)("inlineCode",{parentName:"p"},"MTLAccelerationStructureInstanceFlagOpaque")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"MTLAccelerationStructureInstanceFlagNonOpaque"),"\uff09\uff0c\u800c\u540e\u8005\u53c8\u4f18\u5148\u4e8e\u6bcf\u4e2a\u51e0\u4f55\u4f53\u7684\u4e0d\u900f\u660e\u6027\u3002"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u8fb9\u754c\u6846\u57fa\u5143\uff0c\u5c06\u4ee5\u4e0e\u4e09\u89d2\u5f62\u76f8\u540c\u7684\u65b9\u5f0f\u8bc4\u4f30\u4e0d\u900f\u660e\u5ea6\uff08\u9996\u5148\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector.set_opacity_cull_mode()"),"\uff0c\u7136\u540e\u662f InstanceFlags\uff0c\u7136\u540e\u662f GeometryFlags\uff09\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"opaque")," \u53c2\u6570\u901a\u77e5\u8fb9\u754c\u6846\u76f8\u4ea4\u7a0b\u5e8f\u5df2\u89e3\u6790\u7684\u4e0d\u900f\u660e\u72b6\u6001\u3002\u7136\u540e\uff0c\u4ea4\u96c6\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5f71\u54cd\u5176\u5bf9\u662f\u5426\u9047\u5230\u547d\u4e2d\u7684\u8bc4\u4f30\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"intersector.set_opacity_cull_mode()")," \u5c06\u6839\u636e\u539f\u59cb\u7c7b\u578b\u7684\u4e0d\u900f\u660e\u6027\u8df3\u8fc7\u5b83\u4eec\u3002"),(0,i.kt)("p",null,"\u5982\u679c ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector.force_opacity()")," \u8bbe\u7f6e\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"opaque")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"non_opaque"),"\uff0c\u5219 ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector.set_opacity_cull_mode()")," \u5fc5\u987b\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"none"),"\u3002\u53cd\u4e4b\u4ea6\u7136\uff1a\u4e0d\u900f\u660e\u5ea6\u8986\u76d6\u548c\u4e0d\u900f\u660e\u5ea6\u5254\u9664\u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\u3002\u975e\u6cd5\u7ec4\u5408\u7684\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a\u7684\u3002"),(0,i.kt)("p",null,"\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u58f0\u660e\u52a0\u901f\u7ed3\u6784\u662f\u5426\u5305\u542b\u4e09\u89d2\u5f62\u3001\u8fb9\u754c\u6846\u548c/\u6216\u66f2\u7ebf\u51e0\u4f55\u4f53\u3002\u9ed8\u8ba4\u51e0\u4f55\u4f53\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"geometry_type::triangle | geometry_type::bounding_box"),"\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMetal \u5047\u8bbe\u52a0\u901f\u7ed3\u6784\u4e0d\u5305\u542b\u66f2\u7ebf\u51e0\u4f55\u4f53\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u4f7f\u7528\u5305\u542b ",(0,i.kt)("inlineCode",{parentName:"p"},"geometry_type::curve")," \u7684\u503c\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"assume_geometry_type"),"\uff0c\u4ee5\u4f7f\u66f2\u7ebf\u80fd\u591f\u5728\u76f8\u4ea4\u8c03\u7528\u6216\u76f8\u4ea4\u67e5\u8be2\u6b65\u9aa4\u4e2d\u76f8\u4ea4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"enum class geometry_type {\n    none,\n    triangle,\n    bounding_box,\n    curve,        // Since Metal 3.1\n    all\n};\n\nvoid assume_geometry_type(geometry_type gt)\n")),(0,i.kt)("p",null,"\u8981\u5c06\u4ea4\u96c6\u5bf9\u8c61\u8bbe\u7f6e\u4e3a\u7acb\u5373\u8fd4\u56de\u5b83\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u4ea4\u96c6\uff0c\u8bf7\u4f7f\u7528\u503c ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u3002\u9ed8\u8ba4\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"\u3002\u8be5\u51fd\u6570\u7684\u7528\u9014\u4e4b\u4e00\u662f\u5f53\u4f60\u53ea\u9700\u8981\u77e5\u9053\u4e00\u4e2a\u70b9\u4ece\u53e6\u4e00\u70b9\u662f\u5426\u53ef\u89c1\u65f6\uff0c\u4f8b\u5982\u6e32\u67d3\u9634\u5f71\u6216\u73af\u5883\u5149\u906e\u6321\u65f6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void assume_identity_transforms(bool value);\n")),(0,i.kt)("p",null,"\u4ece Metal 3.1 \u5f00\u59cb\uff0c\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"intersector")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"intersection_query")," \u6dfb\u52a0\u63d0\u793a\uff0c\u6307\u5b9a\u66f2\u7ebf\u57fa\u7840\u3001\u63a7\u5236\u70b9\u6570\u91cf\u548c\u66f2\u7ebf\u7c7b\u578b\uff0c\u4ee5\u4f18\u5316\u7279\u5b9a\u66f2\u7ebf\u7c7b\u578b\u7684\u904d\u5386\u3002"),(0,i.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"curve_basis")," \u662f\u4e00\u4e2a\u679a\u4e3e\u800c\u4e0d\u662f\u4f4d\u63a9\u7801\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum class curve_basis {\n    bspline,\n    catmull_rom,\n    linear,\n    bezier,\n    all,\n};\n\nenum class curve_type {\n    round,\n    flat,\n    all,\n};\n")),(0,i.kt)("p",null,"\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8bbe\u7f6e\u8981\u5047\u8bbe\u7684\u66f2\u7ebf\u57fa\u51fd\u6570\u3002\u9ed8\u8ba4\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"curve_basis::all"),"\uff0c\u8fd9\u610f\u5473\u7740\u5c06\u542f\u7528\u6240\u6709\u66f2\u7ebf\u57fa\u51fd\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void assume_curve_basis(curve_basis cb)\n")),(0,i.kt)("p",null,"\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8bbe\u7f6e\u8981\u5047\u5b9a\u7684\u66f2\u7ebf\u7c7b\u578b\u3002\u9ed8\u8ba4\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"curve_type::all"),"\uff0c\u8fd9\u610f\u5473\u7740\u4e24\u79cd\u66f2\u7ebf\u7c7b\u578b\u90fd\u5c06\u542f\u7528\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void assume_curve_type(curve_type ct)\n")),(0,i.kt)("p",null,"\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8bbe\u7f6e\u8981\u5047\u5b9a\u7684\u66f2\u7ebf\u63a7\u5236\u70b9\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u4e3a 0\uff0c\u8fd9\u610f\u5473\u7740\u5c06\u542f\u7528\u4efb\u610f\u6570\u91cf\u7684\u63a7\u5236\u70b9\uff08\u9002\u7528\u4e8e\u5047\u8bbe\u7684\u66f2\u7ebf\u57fa\u7840\uff08\u5982\u679c\u6709\uff09\uff09\u3002\u5176\u5b83\u6709\u6548\u9009\u9879\u4e3a 2\u30013 \u6216 4\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u66f2\u7ebf\u57fa\u7840\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void assume_curve_control_point_count(uint n)\n")),(0,i.kt)("h2",{id:"\u76f8\u4ea4\u67e5\u8be2\u51fd\u6570"},"\u76f8\u4ea4\u67e5\u8be2\u51fd\u6570"),(0,i.kt)("p",null,"\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\uff1a\u81ea Metal 2. 4 \u8d77\u652f\u6301\u4ea4\u53c9\u53e3\u67e5\u8be2"),(0,i.kt)("p",null,"\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\uff1a\u81ea Metal 3.1 \u8d77\u4ea4\u53c9\u70b9\u67e5\u8be2\u652f\u6301\u66f2\u7ebf"),(0,i.kt)("p",null,"\u8981\u5f00\u59cb\u904d\u5386\u5e76\u67e5\u8be2\u904d\u5386\u7279\u5b9a\u4fe1\u606f\uff0c\u8bf7\u4f7f\u7528\u975e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u4ea4\u96c6\u67e5\u8be2\u5bf9\u8c61\uff08\u8bf7\u53c2\u9605\u7b2c 2.17.7 \u8282\uff09\u6216\u9996\u5148\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"reset(...)"),"\u3002\u5982\u679c\u672a\u6309\u6b64\u987a\u5e8f\u8c03\u7528\uff0c\u5219\u884c\u4e3a\u672a\u5b9a\u4e49\u3002"),(0,i.kt)("p",null,"\u8868 6. 29 \u3001\u8868 6. 31 \u548c\u8868 6. 32 \u663e\u793a\u4e86\u53ef\u4ee5\u6839\u636e\u904d\u5386\u671f\u95f4\u9047\u5230\u7684\u51e0\u4f55\u7c7b\u578b\u8c03\u7528\u7684\u51fd\u6570\u5217\u8868\uff0c\u5047\u8bbe ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," \u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"\u3002\u8bf7\u6ce8\u610f\uff0c\u67d0\u4e9b\u51fd\u6570\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff1a\u5019\u9009\u51fd\u6570\u548c\u5df2\u63d0\u4ea4\u7684\u539f\u8bed\u3002\u5f53\u7b2c\u4e00\u6b21\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," \u65f6\uff0c\u904d\u5386\u540e\u62a5\u544a\u7684\u56fe\u5143\u59cb\u7ec8\u662f\u5019\u9009\u8005\uff0c\u76f4\u5230\u7528\u6237\u901a\u8fc7\u5728\u67e5\u8be2\u5bf9\u8c61\u4e0a\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"commit_triangle_intersection()"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"commit_bounding_box_intersection()")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"commit_curve_intersection()")," \u63d0\u4ea4\u56fe\u5143\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u6ca1\u6709\u7528\u6237\u76f8\u4ea4\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6d4b\u8bd5\u7684\u4e0d\u900f\u660e\u4e09\u89d2\u5f62\u5728\u76f8\u4ea4\u65f6\u4f1a\u81ea\u52a8\u63d0\u4ea4\u3002"),(0,i.kt)(_,{num:"6.29",title:"Intersection query functions",headers:["Functions","Triangle","Bounding","Curve"],datasList:[["void reset(...)","*","*","*"],["bool next()","*","*","*"],["void abort()","*","*","*"],["intersection_type get_candidate_intersection_type() ","*","*","*"],["intersection_type get_committed_intersection_type() ","*","*","*"],["void commit_triangle_intersection()","*","",""],["void commit_bounding_box_intersection(float distance)","","*",""],["void commit_curve_intersection() \nSince Metal 3.1","","","*"]],mdxType:"TableView"}),(0,i.kt)("p",null,"\u4ece Metal 3.1 \u5f00\u59cb\uff0c\u5f53\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"max_levels<Count>")," \u4ea4\u96c6\u6807\u7b7e\u6307\u5b9a\u65f6\uff0c\u4ea4\u96c6\u67e5\u8be2\u652f\u6301\u4ee5\u4e0b\u51fd\u6570\u3002"),(0,i.kt)(_,{num:"6.30",title:"Intersection query functions with max_levels<Count>",headers:["Functions","Triangle","Bounding","Curve"],datasList:[["uint get_candidate_instance_count() \nSince Metal 3.1","*","*","*"],["uint get_candidate_instance_id(uint depth) \nSince Metal 3.1","*","*","*"],["uint get_candidate_user_instance_id(uint depth) \nSince Metal 3.1","*","*","*"],["uint get_committed_instance_count() \nSince Metal 3.1","*","*","*"],["uint get_committed_instance_id(uint depth) \nSince Metal 3.1","*","*","*"],["uint get_committed_user_instance_id(uint depth) \nSince Metal 3.1","*","*","*"]],mdxType:"TableView"}),(0,i.kt)(_,{num:"6.31",title:"Intersection query ray value functions",headers:["Ray Values Functions","Triangle","Bounding","Curve"],datasList:[["float3 get_world_space_ray_origin()","*","*","*"],["float3 get_world_space_ray_direction()","*","*","*"],["float get_ray_min_distance()","*","*","*"],["intersection_params get_intersection_params()","*","*","*"]],mdxType:"TableView"}),(0,i.kt)(_,{num:"6.32",title:"Intersection query candidate value functions",headers:["Candidate Intersections Value Functions","Triangle","Bounding","Curve"],datasList:[["float get_candidate_triangle_distance()","*","",""],["uint get_candidate_instance_id()","*","*","*"],["uint get_candidate_user_instance_id()","*","*","*"],["uint get_candidate_geometry_id()","*","*","*"],["uint get_candidate_primitive_id()","*","*","*"],["float2 get_candidate_triangle_barycentric_coord()","*","",""],["bool is_candidate_non_opaque_bounding_box()","","*",""],["bool is_candidate_triangle_front_facing()","*","",""],["float4x3 get_candidate_object_to_world_transform()","*","*","*"],["float4x3 get_candidate_world_to_object_transform()","*","*","*"],["float3 get_candidate_ray_origin()","*","*","*"],["float3 get_candidate_ray_direction()","*","*","*"],["const device void * get_candidate_primitive_data() Since Metal 3","*","*","*"]],mdxType:"TableView"}),(0,i.kt)(_,{num:"6.33",title:"Intersect query committed value functions",headers:["Committed Intersections Value Functions","Triangle","Bounding","Curve"],datasList:[["float get_committed_distance()","*","*","*"],["uint get_committed_instance_id()","*","*","*"],["uint get_committed_user_instance_id()","*","*","*"],["uint get_committed_geometry_id()","*","*","*"],["uint get_committed_primitive_id()","*","*","*"],["float2 get_committed_triangle_barycentric_coord()","*","-","-"],["bool is_committed_triangle_front_facing()","*","-","-"],["float4x3 get_committed_object_to_world_transform()","*","*","*"],["float4x3 get_committed_world_to_object_transform()","*","*","*"],["float3 get_committed_ray_origin()","*","*","*"],["float3 get_committed_ray_direction()","*","*","*"],["const device void * get_committed_primitive_data() \nSince Metal 3","*","*","*"],["float get_candidate_curve_parameter() Since Metal 3.1","-","-","*"],["float get_committed_curve_parameter() \nSince Metal 3.1","-","-","*"]],mdxType:"TableView"}),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u9700\u8981\u8003\u8651\u7684\u5019\u9009\u4e09\u89d2\u5f62\u547d\u4e2d\u7684\u8ddd\u79bb\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float get_candidate_triangle_distance()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u7684\u547d\u4e2d\u8ddd\u79bb\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float get_committed_distance()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5f53\u524d\u5019\u9009\u547d\u4e2d\u7684\u9876\u7ea7\u7ed3\u6784\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_instance_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5f53\u524d\u5019\u9009\u547d\u4e2d\u7684\u5e95\u5c42\u52a0\u901f\u7ed3\u6784\u4e0a\u7528\u6237\u63d0\u4f9b\u7684\u7528\u6237\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_user_instance_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5f53\u524d\u5019\u9009\u547d\u4e2d\u7684\u5e95\u5c42\u7ed3\u6784\u51e0\u4f55 ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_geometry_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u5019\u9009\u547d\u4e2d\u7684\u51e0\u4f55\u56fe\u5f62\u4e2d\u7684\u5e95\u5c42\u7ed3\u6784\u56fe\u5143 ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_primitive_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u9876\u7ea7\u7ed3\u6784\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_instance_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u7528\u6237\u5728\u5e95\u5c42\u52a0\u901f\u7ed3\u6784\u4e0a\u63d0\u4f9b\u7684\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u7528\u6237\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_user_instance_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u5e95\u5c42\u7ed3\u6784\u51e0\u4f55 ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_geometry_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u51e0\u4f55\u4f53\u4e2d\u7684\u5e95\u5c42\u7ed3\u6784\u56fe\u5143 ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_primitive_id()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u5019\u9009\u547d\u4e2d\u5bf9\u8c61\u7a7a\u95f4\u4e2d\u7684\u5c04\u7ebf\u539f\u70b9\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float3 get_candidate_ray_origin()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u547d\u4e2d\u5019\u9009\u5bf9\u8c61\u7a7a\u95f4\u4e2d\u7684\u5c04\u7ebf\u65b9\u5411\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float3 get_candidate_ray_direction()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u5bf9\u8c61\u7a7a\u95f4\u4e2d\u7684\u5c04\u7ebf\u539f\u70b9\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float3 get_committed_ray_origin()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u5bf9\u8c61\u7a7a\u95f4\u4e2d\u7684\u5149\u7ebf\u65b9\u5411\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float3 get_commissed_ray_direction()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u77e9\u9635\uff0c\u4ee5\u5c06\u5f53\u524d\u547d\u4e2d\u5019\u9009\u7684\u5c04\u7ebf\u539f\u70b9/\u65b9\u5411\u4ece\u5bf9\u8c61\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float4x3 get_candidate_object_to_world_transform()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u77e9\u9635\uff0c\u4ee5\u5c06\u5f53\u524d\u5019\u9009\u547d\u4e2d\u7684\u5c04\u7ebf\u539f\u70b9/\u65b9\u5411\u4ece\u4e16\u754c\u7a7a\u95f4\u8f6c\u6362\u4e3a\u5bf9\u8c61\u7a7a\u95f4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float4x3 get_candidate_world_to_object_transform()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u77e9\u9635\uff0c\u4ee5\u5c06\u5f53\u524d\u63d0\u4ea4\u7684\u547d\u4e2d\u7684\u5c04\u7ebf\u539f\u70b9/\u65b9\u5411\u4ece\u5bf9\u8c61\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float4x3 get_committed_object_to_world_transform()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u77e9\u9635\uff0c\u4ee5\u5c06\u5f53\u524d\u63d0\u4ea4\u7684\u547d\u4e2d\u7684\u5149\u7ebf\u539f\u70b9/\u65b9\u5411\u4ece\u4e16\u754c\u7a7a\u95f4\u8f6c\u6362\u4e3a\u5bf9\u8c61\u7a7a\u95f4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float4x3 get_committed_world_to_object_transform()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5019\u9009\u547d\u4e2d\u4f4d\u7f6e\u91cd\u5fc3\u5750\u6807\u3002\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"get_candidate_intersection_type()")," \u8fd4\u56de\u4e09\u89d2\u5f62\u65f6\u6709\u6548\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float2 get_candidate_triangle_barycentric_coord()\n")),(0,i.kt)("p",null,"\u5bf9\u4e8e\u9876\u70b9\u5c5e\u6027 ",(0,i.kt)("inlineCode",{parentName:"p"},"v0"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"v1")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"v2"),"\uff0c\u6307\u5b9a\u91cd\u5fc3\u70b9\u5904\u7684\u503c\u4e3a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"v1 * barycentric_coord.x +\nv2 * barycentric_coord.y +\nv0 * (1.0f - (barycentric_coord.x + barycentric_coord.y))\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u63d0\u4ea4\u7684\u547d\u4e2d\u4f4d\u7f6e\u91cd\u5fc3\u5750\u6807\u3002\u5f53 get_committed_intersection_type() \u8fd4\u56de\u4e09\u89d2\u5f62\u65f6\u6709\u6548\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float2 get_committed_triangle_barycentric_coord()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u547d\u4e2d\u4e09\u89d2\u5f62\u5019\u9009\u5bf9\u8c61\u662f\u6b63\u9762\u8fd8\u662f\u80cc\u9762\u3002\u5982\u679c\u662f\u6b63\u9762\u5219\u8fd4\u56de true\uff0c\u5982\u679c\u662f\u80cc\u9762\u5219\u8fd4\u56de false\u3002\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"get_candidate_intersection_type()")," \u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"triangle")," \u65f6\u6709\u6548\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"bool is_candidate_triangle_front_facing()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u63d0\u4ea4\u7684\u547d\u4e2d\u662f\u6b63\u9762\u8fd8\u662f\u80cc\u9762\u3002\u5982\u679c\u662f\u6b63\u9762\u5219\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"\uff0c\u5982\u679c\u662f\u80cc\u9762\u5219\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"\u3002\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"get_committed_intersection_type()")," \u8fd4\u56de\u4e09\u89d2\u5f62\u65f6\u6709\u6548\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"bool is_committed_triangle_front_facing()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u5019\u9009\u56fe\u5143\u7684\u6bcf\u4e2a\u56fe\u5143\u6570\u636e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"const device void *get_candidate_primitive_data()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u547d\u4e2d\u7684\u6bcf\u4e2a\u57fa\u5143\u6570\u636e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"const device void *get_committed_primitive_data()\n")),(0,i.kt)("p",null,"\u4ece Metal 3.1 \u5f00\u59cb\uff0c\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"get_candidate_intersection_type()")," \u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"curve")," \u5e76\u4e14\u4ea4\u96c6\u6807\u7b7e\u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"curve_data")," \u65f6\uff0c\u53ef\u4ee5\u8c03\u7528\u4ee5\u4e0b\u4e24\u4e2a\u51fd\u6570\uff1a"),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u8be2\u5f53\u524d\u5019\u9009\u66f2\u7ebf\u7684\u66f2\u7ebf\u53c2\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float get_candidate_curve_parameter()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u8be2\u5f53\u524d\u63d0\u4ea4\u7684\u4ea4\u70b9\u7684\u66f2\u7ebf\u53c2\u6570\u3002\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"get_candidate_intersection_type()")," \u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"curve")," \u65f6\u6709\u6548\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"float get_committed_curve_parameter()\n")),(0,i.kt)("p",null,"\u4ece Metal 3.1 \u5f00\u59cb\uff0c\u5f53\u4ea4\u96c6\u6807\u7b7e\u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"max_levels<Count>")," \u65f6\uff0c\u53ef\u4ee5\u8c03\u7528\u672c\u8282\u4e2d\u7684\u5176\u4f59\u51fd\u6570\uff1a"),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5019\u9009\u4ea4\u96c6\u7684\u5b9e\u4f8b\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_instance_count()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5019\u9009\u4ea4\u96c6\u7684\u7ea7\u522b ",(0,i.kt)("inlineCode",{parentName:"p"},"depth")," \u7684\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_instance_id(uint depth)\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5019\u9009\u4ea4\u96c6\u7684\u7ea7\u522b ",(0,i.kt)("inlineCode",{parentName:"p"},"depth")," \u7684\u7528\u6237\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_candidate_user_instance_id(uint depth)\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u5df2\u63d0\u4ea4\u4ea4\u96c6\u7684\u5b9e\u4f8b\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_instance_count()\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u63d0\u4ea4\u4ea4\u96c6\u7684\u7ea7\u522b ",(0,i.kt)("inlineCode",{parentName:"p"},"depth")," \u7684\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_instance_id(uint depth)\n")),(0,i.kt)("p",null,"\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u67e5\u8be2\u63d0\u4ea4\u4ea4\u96c6\u7684\u7ea7\u522b ",(0,i.kt)("inlineCode",{parentName:"p"},"depth")," \u7684\u7528\u6237\u5b9e\u4f8b ID\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"uint get_committed_user_instance_id(uint depth);\n")),(0,i.kt)("h2",{id:"\u95f4\u63a5\u5b9e\u4f8b\u63cf\u8ff0\u7b26"},"\u95f4\u63a5\u5b9e\u4f8b\u63cf\u8ff0\u7b26"),(0,i.kt)("p",null,"\u4ece Metal 3.1 \u5f00\u59cb\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4ece GPU \u586b\u5199\u95f4\u63a5\u5b9e\u4f8b\u63cf\u8ff0\u7b26\u3002Metal \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u7c7b\u578b\u5b9a\u4e49\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"enum MTLAccelerationStructureInstanceOptions : uint {\n    MTLAccelerationStructureInstanceOptionNone = 0,\n    MTLAccelerationStructureInstanceOptionDisableTriangleCulling = (1 << 0),\n\n    MTLAccelerationStructureInstanceOptionTriangleFrontFacingWindingCoun terClockwise = (1 << 1),\n    MTLAccelerationStructureInstanceOptionOpaque = (1 << 2),\n    MTLAccelerationStructureInstanceOptionNonOpaque = (1 << 3),\n};\n\ntypedef packed_float3 MTLPackedFloat3;\ntypedef packed_float3 MTLPackedFloat4x3[4];\n\nstruct MTLAccelerationStructureInstanceDescriptor {\n  MTLPackedFloat4x3 transformationMatrix;\n  MTLAccelerationStructureInstanceOptions options;\n  uint mask;\n  uint intersectionFunctionTableOffset;\n  uint accelerationStructureIndex;\n};\n\nstruct MTLAccelerationStructureUserIDInstanceDescriptor {\n  MTLPackedFloat4x3 transformationMatrix;\n  MTLAccelerationStructureInstanceOptions options;\n  uint mask;\n  uint intersectionFunctionTableOffset;\n  uint accelerationStructureIndex;\n  uint userID;\n};\n")),(0,i.kt)("p",null,"\u4e3a\u4e86\u65b9\u4fbf\u586b\u5199\u63cf\u8ff0\u7b26\uff0cMetal \u63d0\u4f9b\u4e86\u4ece ",(0,i.kt)("inlineCode",{parentName:"p"},"acceleration_structure<intersection_tags...>")," \u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"MTLResourceID")," \u7684\u9690\u5f0f\u8f6c\u6362\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"acceleration_structure<primitive_motion> primitiveAStruct = ...;\nMTLResourceID resource_id = primitiveAStruct;\n")),(0,i.kt)("h2",{id:"\u66f2\u7ebf\u5b9e\u7528\u51fd\u6570"},"\u66f2\u7ebf\u5b9e\u7528\u51fd\u6570"),(0,i.kt)("p",null,"\u4ece Metal 3.1 \u5f00\u59cb\uff0cMetal \u63d0\u4f9b\u4e86\u4e00\u7ec4\u5728\u5934\u6587\u4ef6 ",(0,i.kt)("inlineCode",{parentName:"p"},"<metal_curves>")," \u4e2d\u5b9a\u4e49\u7684\u66f2\u7ebf\u5b9e\u7528\u51fd\u6570\u3002\u4f7f\u7528\u4ee5\u4e0b\u7f29\u5199\uff1a"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Ps")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"float")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"half"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"P")," is a scalar or a vector of ",(0,i.kt)("inlineCode",{parentName:"p"},"Ps"),". If ",(0,i.kt)("inlineCode",{parentName:"p"},"Ps")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"float"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"P")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"float4"),"."),(0,i.kt)("p",null,"\u8fd9\u4e9b\u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a\u66f2\u7ebf\u53c2\u6570 ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," \u548c\u63a7\u5236\u70b9 ",(0,i.kt)("inlineCode",{parentName:"p"},"p0"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"p1")," \u7b49\u7684\u66f2\u7ebf\u4e0a\u7684\u4f4d\u7f6e\u6216\u4e00\u9636\u6216\u4e8c\u9636\u5bfc\u6570\u3002\u5982\u8868 6.34 \u6240\u793a\uff0c\u8fd9\u4e9b\u51fd\u6570\u652f\u6301\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u3001\u4e09\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u3001\u4e8c\u6b21 B \u6837\u6761\u66f2\u7ebf\u3001\u4e09\u6b21 B \u6837\u6761\u66f2\u7ebf\u3001\u4e09\u6b21 Hermite \u548c Catmull-Rom \u66f2\u7ebf\u3002"),(0,i.kt)(_,{num:"6.34",title:"Curve Utility Functions",headers:["Function","Description"],datasList:[["P bezier(Ps_t, P p0, P p1, P p2)","Returns the position on a quadratic B\xe9zier curve"],["P bezier_derivative(Ps_t, P p0, P p1, P p2)","Returns the first derivative on a quadratic B\xe9zier curve"],["P bezier_second_derivative(Ps_t, P p0, P p1, P p2)","Returns the second derivative on a quadratic B\xe9zier curve"],["P bezier(Ps_t, P p0, P p1, P p2, P p3)","Returns the position on a cubic B\xe9zier curve"],["P bezier_derivative(Ps_t, P p0, P p1, P p2, P p3)","Returns the first derivative on a cubic B\xe9zier curve"],["P bezier_second_derivative(Ps_t, P p0, P p1, P p2, P p3)","Returns the second derivative on a cubic B\xe9zier curve"],["P bspline(Ps_t, P p0, P p1, P p2)","Returns the position on a quadratic B-spline curve"],["P bspline_derivative(Ps_t, P p0, P p1, P p2)","Returns the first derivative on a quadratic B-spline curve"],["P bspline_second_derivative(Ps_t, P p0, P p1, P p2)","Returns the second derivative on a quadratic B-spline curve"],["P bspline(Ps_t, P p0, P p1, P p2, P p3)","Returns the position on a cubic B-spline curve"],["P bspline_derivative(Ps_t, P p0, P p1, P p2, P p3)","Returns the first derivative on a cubic B-spline curve"],["P bspline_second_derivative(Ps_t, P p0, P p1, P p2, P p3)","Returns the second derivative on a cubic B-spline curve"],["P hermite(Ps_t, P p0, P p1, P m0, P m1)","Returns the position on a cubic Hermite curve"],["P hermite_derivative(Ps_t, P p0, P p1, P m0, P m1)","Returns the first derivative on a cubic Hermite curve"],["P hermite_second_derivative(Ps_t, P p0, P p1, P m0, P m1)","Returns the second derivative on a cubic Hermite curve"],["P catmull_rom(Ps_t, P p0, P p1, P p2, P p3)","Returns the position on a Catmull-Rom curve"],["P catmull_rom_derivative(Ps_t, P p0, P p1, P p2, P p3)","Returns the first derivative on a Catmull-Rom curve"],["P catmull_rom_second_derivative(Ps_t, P p0, P p1, P p2, P p3)","Returns the second derivative on a Catmull-Rom curve"]],mdxType:"TableView"}))}k.isMDXComponent=!0}}]);
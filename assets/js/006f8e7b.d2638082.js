"use strict";(self.webpackChunkswift_tutorials_cn=self.webpackChunkswift_tutorials_cn||[]).push([[2666],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),l=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(u.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,d=c["".concat(u,".").concat(m)]||c[m]||f[m]||o;return n?i.createElement(d,a(a({ref:t},p),{},{components:n})):i.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},29111:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(87462),r=(n(67294),n(3905));const o={},a="\u521b\u5efa\u81ea\u5b9a\u4e49\u8bed\u97f3\u5408\u6210\u5668",s={unversionedId:"av-foundation/esseentials/creating-a-custom-speech-synthesizer/index",id:"av-foundation/esseentials/creating-a-custom-speech-synthesizer/index",title:"\u521b\u5efa\u81ea\u5b9a\u4e49\u8bed\u97f3\u5408\u6210\u5668",description:"<OriginalSource",source:"@site/docs/av-foundation/esseentials/creating-a-custom-speech-synthesizer/index.mdx",sourceDirName:"av-foundation/esseentials/creating-a-custom-speech-synthesizer",slug:"/av-foundation/esseentials/creating-a-custom-speech-synthesizer/",permalink:"/swift-tutorials-cn/docs/av-foundation/esseentials/creating-a-custom-speech-synthesizer/",draft:!1,editUrl:"https://github.com/zhuanghongji/swift-tutorials-cn/docs/av-foundation/esseentials/creating-a-custom-speech-synthesizer/index.mdx",tags:[],version:"current",lastUpdatedAt:1698741091,formattedLastUpdatedAt:"2023\u5e7410\u670831\u65e5",frontMatter:{},sidebar:"avfoundationSidebar",previous:{title:"\u5448\u73b0\u7ae0\u8282\u6807\u8bb0",permalink:"/swift-tutorials-cn/docs/av-foundation/esseentials/presenting-chapter-markers/"},next:{title:"Media assets",permalink:"/swift-tutorials-cn/docs/av-foundation/common/media-assets/"}},u={},l=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u914d\u7f6e\u793a\u4f8b\u4ee3\u7801\u9879\u76ee",id:"\u914d\u7f6e\u793a\u4f8b\u4ee3\u7801\u9879\u76ee",level:2},{value:"\u521b\u5efa\u4e00\u4e2a\u63d0\u4f9b\u8bed\u97f3\u7684\u5e94\u7528\u7a0b\u5e8f",id:"\u521b\u5efa\u4e00\u4e2a\u63d0\u4f9b\u8bed\u97f3\u7684\u5e94\u7528\u7a0b\u5e8f",level:2},{value:"\u83b7\u53d6\u53ef\u7528\u8bed\u97f3\u5217\u8868",id:"\u83b7\u53d6\u53ef\u7528\u8bed\u97f3\u5217\u8868",level:2},{value:"\u5904\u7406\u6717\u8bfb\u8bf7\u6c42",id:"\u5904\u7406\u6717\u8bfb\u8bf7\u6c42",level:2},{value:"\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u97f3\u9891\u7f13\u51b2\u533a",id:"\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u97f3\u9891\u7f13\u51b2\u533a",level:2},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2},{value:"CustomSpeechSynthesizerExampleApp.swift",id:"customspeechsynthesizerexampleappswift",level:3},{value:"ContentView.swift",id:"contentviewswift",level:3},{value:"CustomSpeechSynthesizerExampleAudioUnit.swift",id:"customspeechsynthesizerexampleaudiounitswift",level:3},{value:"AudioUnitFactory.swift",id:"audiounitfactoryswift",level:3}],p=(c="OriginalSource",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var c;const f={toc:l},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,i.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u521b\u5efa\u81ea\u5b9a\u4e49\u8bed\u97f3\u5408\u6210\u5668"},"\u521b\u5efa\u81ea\u5b9a\u4e49\u8bed\u97f3\u5408\u6210\u5668"),(0,r.kt)(p,{title:"Creating a custom speech synthesizer",url:"https://developer.apple.com/documentation/avfaudio/audio_engine/audio_units/creating_a_custom_speech_synthesizer",summary:"\u901a\u8fc7\u6784\u5efa\u8bed\u97f3\u5408\u6210\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u4f7f\u7528\u4f60\u7684\u81ea\u5b9a\u4e49\u58f0\u97f3\u6765\u5408\u6210\u8bed\u97f3",mdxType:"OriginalSource"}),(0,r.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,r.kt)("p",null,"\u8bed\u97f3\u5408\u6210\u63d0\u4f9b\u7a0b\u5e8f\uff08speech synthesis provider\uff09\u5141\u8bb8\u4f60\u5c06\u81ea\u5b9a\u4e49\u8bed\u97f3\u5e26\u5230 iOS \u548c macOS \u4e2d\uff0c\u4ee5\u4f9b\u7cfb\u7edf\u4f7f\u7528 VoiceOver \u7b49\u6587\u672c\u8f6c\u8bed\u97f3\u529f\u80fd\u3002\u8bed\u97f3\u5408\u6210\u5668\u63a5\u6536\u6587\u672c\u548c\u6709\u5173\u8bed\u97f3\u5c5e\u6027\u7684\u4fe1\u606f\uff0c\u5e76\u63d0\u4f9b\u8bed\u97f3\u7684\u97f3\u9891\u8868\u793a\u3002\u8981\u751f\u6210\u97f3\u9891\uff0c\u4f60\u9700\u8981\u521b\u5efa\u97f3\u9891\u5355\u5143\u6269\u5c55\u3002"),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u5411\u4f60\u5c55\u793a\u5982\u4f55\u5411\u7cfb\u7edf\u63d0\u4f9b\u8bed\u97f3\u5217\u8868\uff0c\u4ee5\u53ca\u5982\u4f55\u521b\u5efa\u57fa\u672c\u7684\u8bed\u97f3\u5408\u6210\u5668\u6765\u8868\u793a\u4f60\u6307\u5b9a\u7684\u8bed\u97f3\u3002\u5b83\u63a2\u8ba8\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u97f3\u9891\u5355\u5143\uff0c\u8d1f\u8d23\u5904\u7406\u6587\u672c\u8f6c\u8bed\u97f3\u8bf7\u6c42\uff0c\u4ee5\u4f7f\u7528\u8bed\u97f3\u5408\u6210\u6807\u8bb0\u8bed\u8a00\uff08SSML\uff09\u6765\u5408\u6210\u8bed\u97f3\u3002\u8be5\u793a\u4f8b\u68c0\u67e5\u8bf7\u6c42\u7684 SSML \u4e2d\u662f\u5426\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\uff08hello \u548c goodbye\uff09\uff0c\u5e76\u64ad\u653e\u5173\u8054\u7684\u97f3\u9891\u6587\u4ef6\u3002"),(0,r.kt)("h2",{id:"\u914d\u7f6e\u793a\u4f8b\u4ee3\u7801\u9879\u76ee"},"\u914d\u7f6e\u793a\u4f8b\u4ee3\u7801\u9879\u76ee"),(0,r.kt)("p",null,"\u8981\u8fd0\u884c\u6b64\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u9700\u8981\u4ee5\u4e0b\u5185\u5bb9\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"iOS 16 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u6216\u8005 macOS 13 \u6216\u66f4\u9ad8\u7248\u672c\u3002"),(0,r.kt)("li",{parentName:"ul"},"Xcode 14 beta \u6216\u66f4\u9ad8\u7248\u672c\u3002")),(0,r.kt)("p",null,"\u8981\u521b\u5efa\u6269\u5c55\u7a0b\u5e8f\u4f7f\u7528\u7684\u97f3\u9891\u6587\u4ef6\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6253\u5f00\u7ec8\u7aef\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u8fd0\u884c\u547d\u4ee4 ",(0,r.kt)("inlineCode",{parentName:"li"},"say -v Zarvox hello -o hello.aiff"),"\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u8fd0\u884c\u547d\u4ee4 ",(0,r.kt)("inlineCode",{parentName:"li"},"say -v Zarvox goodbye -o goodbye.aiff"),"\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5728\u9879\u76ee\u5bfc\u822a\u5668\u4e2d\uff0c\u5c55\u5f00 ",(0,r.kt)("inlineCode",{parentName:"li"},"CustomSpeechSynthesizerExampleExtension")," \u7ec4\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5c06\u751f\u6210\u7684\u97f3\u9891\u6587\u4ef6\u62d6\u653e\u5230 ",(0,r.kt)("inlineCode",{parentName:"li"},"Audio")," \u7ec4\u4e2d\u3002")),(0,r.kt)("p",null,'\u8fd0\u884c\u9879\u76ee\u540e\uff0c\u4e3a\u4f60\u7684\u8bed\u97f3\u63d0\u4f9b\u540d\u79f0\u5e76\u9009\u62e9 "\u6dfb\u52a0\u8bed\u97f3"\u3002\u6253\u5f00 "\u7cfb\u7edf\u8bbe\u7f6e" \u5e76\u9009\u62e9 "\u8f85\u52a9\u529f\u80fd" > "\u8bed\u97f3\u5185\u5bb9"\uff0c\u9a8c\u8bc1\u8bed\u97f3\u5728 macOS \u4e2d\u662f\u5426\u53ef\u7528\u3002\u7cfb\u7edf\u6700\u591a\u9700\u8981 30 \u79d2\u6765\u5237\u65b0\u53ef\u7528\u8bed\u97f3\u5217\u8868\u3002\u9009\u62e9\u7cfb\u7edf\u8bed\u97f3\u4e0b\u62c9\u83dc\u5355\u4ee5\u67e5\u770b\u4f60\u6dfb\u52a0\u7684\u8bed\u97f3\u3002'),(0,r.kt)("p",null,'\u5728 iOS \u4e2d\uff0c\u6253\u5f00 "\u8bbe\u7f6e" \u5e94\u7528\uff0c\u7136\u540e\u9009\u62e9 "\u8f85\u52a9\u529f\u80fd" > "\u8bed\u97f3\u5185\u5bb9" > "\u8bed\u97f3"\u3002'),(0,r.kt)("h2",{id:"\u521b\u5efa\u4e00\u4e2a\u63d0\u4f9b\u8bed\u97f3\u7684\u5e94\u7528\u7a0b\u5e8f"},"\u521b\u5efa\u4e00\u4e2a\u63d0\u4f9b\u8bed\u97f3\u7684\u5e94\u7528\u7a0b\u5e8f"),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u6765\u81ea\u5b9a\u4e49\u8bed\u97f3\u5408\u6210\u6269\u5c55\u53ef\u7528\u7684\u8bed\u97f3\u5217\u8868\uff0c\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7ec4\u5728\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u548c\u97f3\u9891\u5355\u5143\u6269\u5c55\u4e4b\u95f4\u5171\u4eab\u4fe1\u606f\u3002\u6709\u5173\u5e94\u7528\u7a0b\u5e8f\u7ec4\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/xcode/configuring-app-groups"},"\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7ec4"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'let groupDefaults = UserDefaults(\n        suiteName: "group.com.example.apple.samplecode.CustomSpeechSynthesizerExample"\n)\n')),(0,r.kt)("p",null,"\u5f53\u793a\u4f8b\u66f4\u6539\u53ef\u7528\u8bed\u97f3\u5217\u8868\u65f6\uff0c\u5b83\u4f1a\u901a\u8fc7\u8c03\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/avfaudio/avspeechsynthesisprovidervoice/3929344-updatespeechvoices"},"updateSpeechVoices()")," \u901a\u77e5\u7cfb\u7edf\u5b83\u4eec\u53ef\u4f9b\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'private func saveVoicesToGroupDefaults() {\n\n    // Update the list of voices in the shared group defaults.\n    groupDefaults?.set(voices, forKey: "voices")\n\n    // Inform the system that the available voices changed.\n    AVSpeechSynthesisProviderVoice.updateSpeechVoices()\n}\n')),(0,r.kt)("h2",{id:"\u83b7\u53d6\u53ef\u7528\u8bed\u97f3\u5217\u8868"},"\u83b7\u53d6\u53ef\u7528\u8bed\u97f3\u5217\u8868"),(0,r.kt)("p",null,"\u8be5\u6269\u5c55\u662f\u4e00\u4e2a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/avfaudio/avspeechsynthesisprovideraudiounit"},"AVSpeechSynthesisProviderAudioUnit"),"\uff0c\u8d1f\u8d23\u5904\u7406\u8bed\u97f3\u5408\u6210\u4efb\u52a1\u3002\u97f3\u9891\u5355\u5143\u5411\u7cfb\u7edf\u63d0\u4f9b\u53ef\u7528\u8bed\u97f3\u5217\u8868\uff0c\u68c0\u67e5\u8bf7\u6c42\u7684 SSML\uff0c\u5e76\u5411\u7cfb\u7edf\u63d0\u4f9b\u97f3\u9891\u7f13\u51b2\u533a\u3002\u4e3a\u4e86\u63d0\u4f9b\u8bed\u97f3\u5217\u8868\uff0c\u8be5\u793a\u4f8b\u68c0\u7d22\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u8bed\u97f3\u5217\u8868\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u8bed\u97f3\u521d\u59cb\u5316\u4e00\u4e2a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/avfaudio/avspeechsynthesisprovidervoice"},"AVSpeechSynthesisProviderVoice"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'public override var speechVoices: [AVSpeechSynthesisProviderVoice] {\n    get {\n        let voices: [String] = (groupDefaults?.value(forKey: "voices") as? [String]) ?? []\n        return voices.map { voice in\n            return AVSpeechSynthesisProviderVoice(name: voice,\n                                                  identifier: "com.identifier.\\(voice)",\n                                                  primaryLanguages: ["en-US"],\n                                                  supportedLanguages: ["en-US"])\n        }\n    }\n    set { }\n}\n')),(0,r.kt)("h2",{id:"\u5904\u7406\u6717\u8bfb\u8bf7\u6c42"},"\u5904\u7406\u6717\u8bfb\u8bf7\u6c42"),(0,r.kt)("p",null,"\u5f53\u6709\u6587\u672c\u53ef\u4f9b\u5408\u6210\u65f6\uff0c\u7cfb\u7edf\u4f1a\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"AVSpeechSynthesisProviderRequest")," \u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"synthesizeSpeechRequest(_:)")," \u3002\u8be5\u8bf7\u6c42\u5305\u542b\u63cf\u8ff0\u8981\u5408\u6210\u7684\u6587\u672c\u7684 SSML \u8868\u793a\u5f62\u5f0f\u4ee5\u53ca\u7528\u4e8e\u81ea\u5b9a\u4e49\u97f3\u9ad8\u3001\u901f\u7387\u3001\u8bed\u8c03\u7b49\u7684\u76f8\u5e94\u5c5e\u6027\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"public override func synthesizeSpeechRequest(\n        _ speechRequest: AVSpeechSynthesisProviderRequest)\n{\n    request = speechRequest\n    currentBuffer = getAudioBufferForSSML(speechRequest.ssmlRepresentation)\n    framePosition = 0\n}\n")),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u4f7f\u7528 SSML \u8c03\u7528\u8f85\u52a9\u65b9\u6cd5\u6765\u68c0\u7d22\u5305\u542b\u8981\u5728\u6e32\u67d3\u5757\u4e2d\u64ad\u653e\u7684\u97f3\u9891\u7684\u7f13\u51b2\u533a\u3002\u65b9\u6cd5 ",(0,r.kt)("inlineCode",{parentName:"p"},"cancelSpeechRequest()")," \u4e22\u5f03\u5f53\u524d\u7684\u8bed\u97f3\u8bf7\u6c42\u3002"),(0,r.kt)("h2",{id:"\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u97f3\u9891\u7f13\u51b2\u533a"},"\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u97f3\u9891\u7f13\u51b2\u533a"),(0,r.kt)("p",null,"\u7cfb\u7edf\u8c03\u7528\u97f3\u9891\u5355\u5143\u7684\u6e32\u67d3\u5757\u6765\u83b7\u53d6\u7528\u4e8e\u64ad\u653e\u7684\u97f3\u9891\u7f13\u51b2\u533a\u5217\u8868\u3002\u8be5\u5757\u63a5\u6536\u7cfb\u7edf\u8bf7\u6c42\u7684\u5e27\u6570\u3002\u8be5\u793a\u4f8b\u5c06\u5f53\u524d\u7f13\u51b2\u533a\u7684\u5e27\u590d\u5236\u5230\u76ee\u6807\u7f13\u51b2\u533a\u4e2d\u8fdb\u884c\u6e32\u67d3\u3002\u5f53\u793a\u4f8b\u8017\u5c3d\u53ef\u7528\u97f3\u9891\u7f13\u51b2\u533a\u65f6\uff0c\u5b83\u5c06\u6e32\u67d3\u64cd\u4f5c\u8bbe\u7f6e\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"offlineUnitRenderAction_Complete")," \u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// Iterate through the requested number of frames.\nfor frame in 0..<frameCount {\n    // Copy the source frames into the target buffer.\n    frames[Int(frame)] = sourceFrames[Int(self.framePosition)]\n    self.framePosition += 1\n    // Complete the request if the frame position exceeds the available buffer.\n    if self.framePosition >= self.currentBuffer!.frameLength {\n        actionFlags.pointee = .offlineUnitRenderAction_Complete\n        break\n    }\n}\n")),(0,r.kt)("h2",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,r.kt)("h3",{id:"customspeechsynthesizerexampleappswift"},"CustomSpeechSynthesizerExampleApp.swift"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"import SwiftUI\n\n@main\nstruct CustomSpeechSynthesizerExampleApp: App {\n    var body: some Scene {\n        WindowGroup {\n            ContentView()\n        }\n    }\n}\n")),(0,r.kt)("h3",{id:"contentviewswift"},"ContentView.swift"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'import AVFoundation\nimport SwiftUI\n\nstruct ContentView: View {\n\n    // MARK: - Public Properties\n\n    let groupDefaults = UserDefaults(suiteName: "group.com.example.apple.samplecode.CustomSpeechSynthesizerExample")\n\n    @State var voices: [String] = []\n    @State var voiceName: String = ""\n\n    var body: some View {\n        VStack {\n            HStack {\n                TextField("Name", text: $voiceName)\n                Button("Add Voice") {\n                    voices.append(voiceName)\n                    voiceName = ""\n                    saveVoicesToGroupDefaults()\n                }\n                .disabled(voiceName.isEmpty)\n            }\n            List {\n                ForEach(voices, id: \\.self) { voice in\n                    HStack {\n                        Text(voice)\n                        Spacer()\n                        Button("Delete") {\n                            voices = voices.filter({ value in\n                                value != voice\n                            })\n                            saveVoicesToGroupDefaults()\n                        }\n                    }\n                }\n            }\n        }\n        .onAppear {\n            voices = (groupDefaults?.value(forKey: "voices") as? [String]) ?? []\n        }\n        .padding()\n\n    }\n\n    // MARK: - Private Methods\n\n    private func saveVoicesToGroupDefaults() {\n\n        // Update the list of voices in the shared group defaults.\n        groupDefaults?.set(voices, forKey: "voices")\n\n        // Inform the system that the available voices changed.\n        AVSpeechSynthesisProviderVoice.updateSpeechVoices()\n\n    }\n\n}\n\nstruct ContentView_Previews: PreviewProvider {\n    static var previews: some View {\n        ContentView()\n    }\n}\n')),(0,r.kt)("h3",{id:"customspeechsynthesizerexampleaudiounitswift"},"CustomSpeechSynthesizerExampleAudioUnit.swift"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'import AVFoundation\n\npublic class CustomSpeechSynthesizerExampleAudioUnit: AVSpeechSynthesisProviderAudioUnit {\n\n    // MARK: - Private Properties\n\n    private let groupDefaults = UserDefaults(suiteName: "group.com.example.apple.samplecode.CustomSpeechSynthesizerExample")\n\n    private var request: AVSpeechSynthesisProviderRequest?\n\n    private var outputBus: AUAudioUnitBus\n    private var _outputBusses: AUAudioUnitBusArray!\n    private var currentBuffer: AVAudioPCMBuffer?\n    private var framePosition: AVAudioFramePosition = 0\n    private var format: AVAudioFormat\n\n    // MARK: - Lifecycle\n\n    @objc\n    override init(componentDescription: AudioComponentDescription,\n                  options: AudioComponentInstantiationOptions) throws {\n\n        let basicDescription = AudioStreamBasicDescription(mSampleRate: 22_050,\n                                                           mFormatID: kAudioFormatLinearPCM,\n                                                           mFormatFlags: kAudioFormatFlagsNativeFloatPacked | kAudioFormatFlagIsNonInterleaved,\n                                                           mBytesPerPacket: 4,\n                                                           mFramesPerPacket: 1,\n                                                           mBytesPerFrame: 4,\n                                                           mChannelsPerFrame: 1,\n                                                           mBitsPerChannel: 32,\n                                                           mReserved: 0)\n\n        format = AVAudioFormat(cmAudioFormatDescription: try! CMAudioFormatDescription(audioStreamBasicDescription: basicDescription))\n        outputBus = try AUAudioUnitBus(format: self.format)\n\n        try super.init(componentDescription: componentDescription,\n                       options: options)\n\n        _outputBusses = AUAudioUnitBusArray(audioUnit: self,\n                                            busType: AUAudioUnitBusType.output,\n                                            busses: [outputBus])\n\n    }\n\n    // MARK: - Public Properties\n    public override var speechVoices: [AVSpeechSynthesisProviderVoice] {\n        get {\n            let voices: [String] = (groupDefaults?.value(forKey: "voices") as? [String]) ?? []\n            return voices.map { voice in\n                return AVSpeechSynthesisProviderVoice(name: voice,\n                                                      identifier: "com.identifier.\\(voice)",\n                                                      primaryLanguages: ["en-US"],\n                                                      supportedLanguages: ["en-US"])\n            }\n        }\n        set { }\n    }\n\n    public override var outputBusses: AUAudioUnitBusArray {\n        return _outputBusses\n    }\n\n    public override func allocateRenderResources() throws {\n        try super.allocateRenderResources()\n    }\n\n    public override var internalRenderBlock: AUInternalRenderBlock {\n        return { actionFlags, timestamp, frameCount, outputBusNumber, outputAudioBufferList, _, _ in\n\n            // The audio buffer to fill with data to return to the system\n            let unsafeBuffer = UnsafeMutableAudioBufferListPointer(outputAudioBufferList)[0]\n            let frames = unsafeBuffer.mData!.assumingMemoryBound(to: Float32.self)\n\n            // Get the frames from the current buffer that represents the SSML.\n            let sourceBuffer = UnsafeMutableAudioBufferListPointer(self.currentBuffer!.mutableAudioBufferList)[0]\n            let sourceFrames = sourceBuffer.mData!.assumingMemoryBound(to: Float32.self)\n\n            // Clear the target buffer.\n            for frame in 0..<frameCount {\n                frames[Int(frame)] = 0.0\n            }\n\n            // Iterate through the requested number of frames.\n            for frame in 0..<frameCount {\n                // Copy the source frames into the target buffer.\n                frames[Int(frame)] = sourceFrames[Int(self.framePosition)]\n                self.framePosition += 1\n                // Complete the request if the frame position exceeds the available buffer.\n                if self.framePosition >= self.currentBuffer!.frameLength {\n                    actionFlags.pointee = .offlineUnitRenderAction_Complete\n                    break\n                }\n            }\n            return noErr\n        }\n    }\n\n    // MARK: - Public Methods\n\n    public override func synthesizeSpeechRequest(_ speechRequest: AVSpeechSynthesisProviderRequest) {\n        request = speechRequest\n        currentBuffer = getAudioBufferForSSML(speechRequest.ssmlRepresentation)\n        framePosition = 0\n    }\n\n    public override func cancelSpeechRequest() {\n        request = nil\n    }\n\n    func getAudioBufferForSSML(_ ssml: String) -> AVAudioPCMBuffer? {\n        let audioFileName = ssml.contains("goodbye") ? "goodbye" : "hello"\n        guard let fileUrl = Bundle.main.url(forResource: audioFileName,\n                                            withExtension: "aiff") else {\n            return nil\n        }\n\n        do {\n            let file = try AVAudioFile(forReading: fileUrl)\n            let buffer = AVAudioPCMBuffer(pcmFormat: self.format,\n                                          frameCapacity: AVAudioFrameCount(file.length))\n            try file.read(into: buffer!)\n            return buffer\n        } catch {\n            return nil\n        }\n    }\n}\n')),(0,r.kt)("h3",{id:"audiounitfactoryswift"},"AudioUnitFactory.swift"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"import CoreAudioKit\n\npublic class AudioUnitFactory: NSObject, AUAudioUnitFactory {\n\n    var audioUnit: AUAudioUnit?\n\n    public func beginRequest(with context: NSExtensionContext) { }\n\n    @objc\n    public func createAudioUnit(with componentDescription: AudioComponentDescription) throws -> AUAudioUnit {\n        audioUnit = try CustomSpeechSynthesizerExampleAudioUnit(componentDescription: componentDescription, options: [])\n        return audioUnit!\n    }\n}\n")))}d.isMDXComponent=!0}}]);